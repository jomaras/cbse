<?xml version="1.0" encoding="UTF-8"?><xml><records><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Abella, M</author><author>Vaquero, J J</author><author>Sisniega, A</author><author>Pascau, J</author><author>Udías, A</author><author>García, V</author><author>Vidal, I</author><author>Desco, M</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Software architecture for multi-bed FDK-based reconstruction in X-ray CT scanners.</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords/><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><accession-num>21908068</accession-num><electronic-resource-num>10.1016/j.cmpb.2011.06.008</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Abella et al. - 2001 - Software architecture for multi-bed FDK-based reconstruction in X-ray CT scanners(2).pps</url></pdf-urls><web-urls><url>http://www.ncbi.nlm.nih.gov/pubmed/21908068</url></web-urls></urls><label>ignore</label><abstract>Most small-animal X-ray computed tomography (CT) scanners are based on cone-beam geometry with a flat-panel detector orbiting in a circular trajectory. Image reconstruction in these systems is usually performed by approximate methods based on the algorithm proposed by Feldkamp et al. (FDK). Besides the implementation of the reconstruction algorithm itself, in order to design a real system it is necessary to take into account numerous issues so as to obtain the best quality images from the acquired data. This work presents a comprehensive, novel software architecture for small-animal CT scanners based on cone-beam geometry with circular scanning trajectory. The proposed architecture covers all the steps from the system calibration to the volume reconstruction and conversion into Hounsfield units. It includes an efficient implementation of an FDK-based reconstruction algorithm that takes advantage of system symmetries and allows for parallel reconstruction using a multiprocessor computer. Strategies for calibration and artifact correction are discussed to justify the strategies adopted. New procedures for multi-bed misalignment, beam-hardening, and Housfield units calibration are proposed. Experiments with phantoms and real data showed the suitability of the proposed software architecture for an X-ray small animal CT based on cone-beam geometry.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Councill, Bill</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Third-Party Certification and Its Required Elements</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>component-based software project manager</keyword><keyword>engineering management</keyword><keyword>one best way</keyword><keyword>third-party certification</keyword><keyword>trusted component</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Councill - 2001 - Third-Party Certification and Its Required Elements.pdf</url></pdf-urls></urls><label>North America;Private Company;TQC;USA</label><abstract>This paper is concerned about certification and trusted component issues not addressed directly by the workshop. In particular, the issues are one through four. I will describe primarily the human, social, industrial, and business-to-business issues required to assure trusted components.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Component Trust and Certification</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords/><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Unknown - 2001 - Component Trust and Certification.pps</url></pdf-urls></urls><label>ignore</label></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Fisler, Kathi</author><author>Krishnamurthi, Shriram</author><author>Batory, Don</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Verifying Component-Based Collaboration Designs</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords/><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Fisler, Krishnamurthi, Batory - 2001 - Verifying Component-Based Collaboration Designs(2).pdf</url></pdf-urls></urls><label>Brown University;Institute;North America;USA;University;University of Texas at Austin;Worcester Polytechnic Institute</label></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Garlan, David</author><author>Schmerl, Bradley</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Component Based Software Engineering in Pervasive Computing Environments</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><pages>105-108</pages><volume>2</volume><issue>1</issue><keywords><keyword>component-based software engineering</keyword><keyword>pervasive computing</keyword><keyword>software architectures</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><electronic-resource-num>10.5120/605-855</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Kaur - 2001 - Component Based Software Engineering(2).pdf</url></pdf-urls></urls><label>Carnegie Mellon University;North America;USA;University</label><abstract>Being able to find, adapt, and incorporate disparate compo- nents to form working, reliable applications is the goal of component-based software engineering. To date, there has been a lot of research, among other things, on locating components, reasoning about component compatibility, and methods for interoperability. Pervasive computing raises a number of new challenges for component-based software engineering that heretofore have been given little attention, such as mobility, adaptability, and resource awareness. In this paper we motivate and discuss the need for research in these areas, and discuss how our work in the Aura group at Carnegie Mellon University helps to address these issues.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Genßler, Thomas</author><author>Zeidler, Christian</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Rule-driven component composition for embedded systems</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>components</keyword><keyword>software for embedded devices</keyword><keyword>static composition checking</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Genßler, Zeidler - 2001 - Rule-driven component composition for embedded systems.pdf</url></pdf-urls></urls><label>ABB;Europe;Forschungszentrum Informatik;Germany;Private Company;University</label><abstract>We present in this paper an approach to correct-by- construction software composition based on the use of non- functional properties of the involved components and a set of constraints and design rules using those properties.We focus on the domain of software for embedded devices although most of the concepts presented can also be extended to component-based software development in general. We be- lieve that software development for embedded deviceswould benefit a lot from the component-based approach. However, software for embedded devices usually has to fulfill much stronger reliability and correctness requirements than con- ventional software. This calls for appropriate techniques and approaches to ensure the correctness of the software being built. We propose using first order predicate logic to check statically verifiable properties design rules. Furthermore, support is provided for the specification of contracts which will be dynamically checked.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Ghosh, Sudipto</author><author>Mathur, Adity P.</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Certification of Distributed Component Computing Middleware and Applications</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>certification</keyword><keyword>corba component model</keyword><keyword>corba services</keyword><keyword>distributed components</keyword><keyword>distributed object computing</keyword><keyword>enterprise java beans</keyword><keyword>model</keyword><keyword>quality of service</keyword><keyword>software testing</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Ghosh - 2001 - Certification of Distributed Component Computing Middleware and Applications.pdf</url></pdf-urls></urls><label>Colarado State University;North America;Purdue University;USA;University</label><abstract>We focus on the issues related to the certification of compo- nents and applications conforming to theCORBA3 standard. CORBA 3 is a standard for Distributed Component Comput- ing (DCC) middleware. Similar standards include Enterprise Java Beans. The specifications for these technologies offer a set of services, such as security, transaction and persistence. Certification ofDCCmiddleware and applications poses sev- eral challenging issues discussed in this paper.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Giannakopoulou, Dimitra</author><author>Penix, John</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Component Verification and Certification in NASA Missions</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords/><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Penix, Field - 2001 - Component Verification and Certification in NASA Missions(2).pdf</url></pdf-urls></urls><label>Institute;NASA;RIACS</label><abstract>Software development for NASA missions is a particularly challenging task. Missions are extremely ambitious scientifically, have very strict time frames, and must be accomplished with a maximum degree of reliability. Verification technologies must therefore be pushed far beyond their current capabilities. Moreover, reuse and adaptation of software architectures and components must be incorporated in software development within and across missions. This paper discusses NASA applications that we are currently investigating from these perspectives.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Hamlet, Dick</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Component Synthesis Theory : The Problem of Scale</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><pages>1-5</pages><keywords/><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Hamlet - 2001 - Component Synthesis Theory The Problem of Scale.pdf</url></pdf-urls></urls><label>North America;Portland State University;USA;University</label><abstract>This position paper reviews a paradigm for determin- ing properties of component assemblies based on black- box component representations. Such a representation does not use subjective measures like a description of its development process, nor does it require access to the source code. However, it is not strictly specification based, because it does use properties of the code, no- tably results of test executions. The paper then poses an important problem for any such research: the problem of scale. Any precise analysis or synthesis procedure for a system’s properties based on its component prop- erties will work best when the components are ‘small,’ in the sense that their detailed properties are relatively easy to measure and describe in practice. Useful systems are not small, however, and thus a sys- tem cannot be viewed asmerely an extreme example of a component. Something is necessarily lost in the syn- thesis. When systems are to be composed of ever-larger components, which may be systems in their own right, this issue of scale becomes critical. We suggest that it is natural for the properties and theories of aggregate systems to change with the system size, and that it will be necessary to define informally and formally different kinds of ‘component’ at different levels of organization.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Kallio, Päivi</author><author>Niemelä, Eila</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Documented Quality of COTS and OCM Components</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>cots</keyword><keyword>ocm</keyword><keyword>software acquisition</keyword><keyword>software documentation</keyword><keyword>software reuse</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Kallio et al. - 2001 - Documented Quality of COTS and OCM Components.pdf</url></pdf-urls></urls><label>Europe;Finland;Private Company;VTT Electronics</label><abstract>The reuse of components increases the need to document the components in a standard way, because proper documentation assists a buyer to assess the credibility and maturity of a component and validate the functional and quality properties of a component. This document provides a general template for documenting software components in a standard way whereby the component buyer and developer views are taken into account.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Lau, Kung-kiu</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Component Certification and System Prediction : Is there a Role for Formality ?</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords/><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Lau - 2001 - Component Certification and System Prediction Is there a Role for Formality.pdf</url></pdf-urls></urls><label>Europe;UK;University;University of Manchester</label><abstract>In this paper, we specify an open problem: predictable component assembly, and state a position on compositional reasoning techniques that we believe are necessary for this purpose.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Mason, Dave</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Probability Density Functions in Program Analysis</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords/><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Mason - 2001 - Probability Density Functions in Program Analysis.pdf</url></pdf-urls></urls><label>Canada;North America;Ryerson Polytechnic University;University</label><abstract>The component reliability model described in [4] requires that component execution frequency, reliability, and trans- formations be analysed statistically based on parameters to the component. This paper describes work in progress to- ward that goal.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Mohagheghi, Parastoo</author><author>Conradi, Reidar</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Experiences with certification of reusable components in the GSN project in Ericsson , Norway</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>components</keyword><keyword>layered system architecture</keyword><keyword>quality requirements</keyword><keyword>software quality</keyword><keyword>software reuse</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Mohagheghi, Student, Conradi - 2001 - Experiences with certification of reusable components in the GSN project in Ericsson , Norway.pdf</url></pdf-urls></urls><label>Ericsson;Europe;NTNU;Norway;Private Company</label><abstract>Software reuse, or component-based development is regarded as one of the most potent software technologies in order to reduce lead times, increase functionality, and reduce costs. The Norwegian INCO R&amp;D project (INcremental and COmponent-based development) aims at developing and evaluating better methods in this area [9]. It involves the University of Oslo and NTNU in Trondheim, with Ericsson as one of the cooperating industrial companies. In this paper we discuss the experiences with the process to identify, develop and verify the reusable components at Ericsson in Grimstad, Norway. We present and assess the existing methods for internal reuse across two development projects.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Popov, Peter</author><author>Strigini, Lorenzo</author><author>Riddle, Steve</author><author>Romanovsky, Alexander</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Protective Wrapping of OTS Components</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>dependability</keyword><keyword>error detection</keyword><keyword>ots components</keyword><keyword>wrapping</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Popov et al. - 2001 - Protective Wrapping of OTS Components.pdf</url></pdf-urls></urls><label>City University;Europe;UK;University;University of Newcastle upon Tyne</label><abstract>Off-the-shelf (OTS) components are increasingly used in ap- plication areas with high dependability requirements. We propose a general approach to developing protective wrap- pers, in order to integrate OTS items with the rest of the sys- tem without reducing the system dependability.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Preiss, Otto</author><author>Wegmann, Alain</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Towards a Composition Model Problem Based on IEC61850</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><pages>1-5</pages><keywords><keyword>component assembly</keyword><keyword>iec61850</keyword><keyword>quality attributes</keyword><keyword>software components</keyword><keyword>substation automation</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Preiss, Wegmann - 2001 - Towards a Composition Model Problem Based on IEC61850(2).pdf</url></pdf-urls></urls><label>ABB;Europe;Institute;Private Company;Swiss Federal Institute of Technology;Switzerland</label><abstract>In order to define an interesting model problem for research work around the assembly of software components, this paper introduces the substation automation domain. Special emphasis is put on those aspects of the application area which make its employment as model problem provider attractive. Firstly, the composition is required to meet several quality requirements besides functionality and must therefore allow for the prediction of these qualities before the final potentially costly factory and/or onsite acceptance test. Secondly, the system is assembled and is undergoing currently known functionality a of the application domain is sufficiently modeled, so that the mapping to components and their quality requirements is straightforward. Thirdly, the upcoming IEC61850 standard, which provides the basis for the functional models as well as the quality requirements, is publicly accessible. It also contains representative sample complexities.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Schmidt, Heinz</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Trusted Components - Towards Automated Assembly with Predictable Properties</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>automatic adaptation</keyword><keyword>automatic code synthesis</keyword><keyword>certification</keyword><keyword>component assembly</keyword><keyword>Component technology</keyword><keyword>component-based software engineering</keyword><keyword>composability</keyword><keyword>quality assurance</keyword><keyword>reliability</keyword><keyword>trust</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Schmidt - 2001 - Trusted Components - Towards Automated Assembly with Predictable Properties(2).pdf</url></pdf-urls></urls><label>Unknown</label><abstract>This article attempts to define requirements for a trusted components model suitable for formal analysis and partially automatic synthesis. Then it briefly summarises work in our group towards the foundations of such a model. Finally we sketch ongoing work and the plan for a current project in which we build an environment combining rich component interface definition with architecture definition. We sketch proposed extensions of common IDLs for behavior specification and non-functional aspects such as reliability and performance</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Sitaraman, Murali</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Compositional Performance Reasoning</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>algorithms</keyword><keyword>data structures</keyword><keyword>formal analysis</keyword><keyword>generic objects</keyword><keyword>reusable software components</keyword><keyword>space analysis</keyword><keyword>specification</keyword><keyword>storage management</keyword><keyword>time</keyword><keyword>verification</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Sitaraman - 2001 - Compositional Performance Reasoning.pdf</url></pdf-urls></urls><label>Clemson University;North America;USA;University</label><abstract>A well-understood reason for component-based software engineering (CBSE) is improved productivity. CBSE is also important for another basic reason. compositional reasoning, it is possible to reason about the behavior of the system using the behavioral specifications of reused components ignoring Compositionality is essential for a reasoning process – formal or informal – to scale up. demands predictability in of high quality systems. compositional or modular reasoning, and therefore, it facilitates production It enables In their internal details. Formal techniques for reasoning typically concentrate on functional behavior, though predictable component-based software engineering both functional and performance behavior. Compositional analysis of time and space for component-based software is the focus of this paper. The paper discusses a variety of issues in compositional performance specification and reasoning, including the impact of abstraction, precision, and parameterization. The problems are so basic that there are unresolved research issues to be tackled even for the simplest reusable components.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Stafford, Judith</author><author>Wallnau, Kurt</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Is Third Party Certification Necessary ?</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords/><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Stafford, Wallnau - 2001 - Is Third Party Certification Necessary.pdf</url></pdf-urls></urls><label>Carnegie Mellon University;Institute;North America;Software Engineering Institute;USA;University</label><abstract>Developing software systems that are composed in total or in part from software components over which the developer has little control presents difficulties not yet addressed by component- based software engineering research. Among the problems asso- ciated with such component-based development is the potential for a component developer to misrepresent the quality of compo- nents. It is therefore paramount that some means of achieving of trust be established between component developers and compo- nent users. We are developing a model for the component mar- ketplace that supports prediction of system properties prior to component selection. In this paper we describe the model, and describe two possible forms that the model may take in order to establish trust among participants in component-based design. We discuss the pros and cons of each choice, and leave the topic open for further discussion.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Szyperski, Clemens</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Components ... What the heck ?</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords/><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Szyperski - 2001 - Components ... What the heck.pdf</url></pdf-urls></urls><label>ignore</label></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Vieira, Marlon E. R.</author><author>Richardson, Debra J</author><author>Dias, Marcio S</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Describing Dependencies in Component Access Points</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>dependence analysis</keyword><keyword>maintenance</keyword><keyword>software components</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Richardson - 2001 - Describing Dependencies in Component Access Points.pdf</url></pdf-urls></urls><label>North America;USA;University;University of California</label><abstract>Developing component-based systems is problematical without understanding potential component dependencies. A significant underlying challenge is making available ways to determine and represent those dependencies and mechanisms to deal with them. This paper discusses issues related to component dependencies and introduces an approach to describe what can happen (in term of actions/dependencies) after a particular component’s access points (services) are called.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Weide, Bruce W</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>&quot;Modular Regression Testing&quot;: Connections to Component- Based Software</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>component-based software</keyword><keyword>compositional reasoning</keyword><keyword>modular reasoning</keyword><keyword>regression testing</keyword><keyword>testing</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Weide - 2001 - Modular Regression Testing Connections to Component- Based Software.pdf</url></pdf-urls></urls><label>North America;Ohio State University;USA;University</label><abstract>Many have argued that software that is not designed to support modular reasoning about its behavior is inherently fragile and costly to maintain, and that software engineers should seek to achieve the modular reasoning property to help overcome these problems. But some people resist these claims, taking one of two contradictory positions: 1. Modular reasoning is inherently limited to impractical purely functional programs where there is no state and there are no side-effects. 2. Modular reasoning is possible for any reasonably &quot;well-designed&quot; software system written in a modern imperative object-oriented language that uses its so- phisticated encapsulation mechanisms. Explanations of why (1) is wrong have been relatively ef- fective. We suspect this is because both experimental and (more recently) commercial software has been built in C++ in a disciplined way that supports modular reasoning about its behavior, and it has (among other advantages) dramati- cally lower defect rates than &quot;normal&quot; software of like kind. Explanations of why (2) is wrong have been less effective. We suspect this is because they have been based on syn- thetic examples that appear to be pathological and therefore of little practical consequence. Using a thought experiment involving regression testing of systems having features that no one should doubt are just like &quot;real&quot; software, we make another stab at giving a convincing argument on this point.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Wile, David S</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Ensuring General-purpose and Domain-specific Properties Using Architectural Styles</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><keywords><keyword>architecture style</keyword><keyword>composition</keyword><keyword>domain-specific languages</keyword><keyword>software architecture</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Wile et al. - 2001 - Ensuring General-purpose and Domain-specific Properties Using Architectural Styles.pdf</url></pdf-urls></urls><label>North America;Private Company;Teknowledge Corp;USA</label><abstract>The use of domain-specific languages and development tools, such as those found in product-line development kits, have been shown to reduce programming and debugging costs considerably. Commercial, Off-The-Shelf At the same time, general-purpose (COTS) tools are improving rapidly. Moreover, providing security, privacy, reliability, and other Quality of Service (QoS) properties normally has little to do with the specific problem domains in which they are applied. Here, based on the observation that an architecture itself is a composition mechanism, I advocate the use of software architecture styles to provide a composition mechanism that retains the benefits of both domain-specific and general-purpose approaches.</abstract></record><record><database name="2001.enl" path="2001.enl">2001.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Woodman, Mark</author><author>Benediktsson, Oddur</author><author>Lefever, Bruno</author><author>Stallinger, Friedrich</author></authors><secondary-authors><author>Crković, Ivica</author><author>Schmidt, Heinz</author><author>Stafford, Judith</author><author>Wallnau, Kurt</author></secondary-authors></contributors><titles><title>Issues of CBD Product Quality and Process Quality</title><secondary-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</secondary-title></titles><periodical><full-title>Component Certification and System Prediction, Fourth International Workshop on Component-Based Software Engineering</full-title></periodical><pages>1-4</pages><keywords><keyword>component-based development</keyword><keyword>process assessment</keyword><keyword>software quality</keyword></keywords><dates><year>2001</year></dates><pub-location>Toronto, Canada</pub-location><urls><pdf-urls><url>internal-pdf://Woodman, Benediktsson, Park - 2001 - Issues of CBD Product Quality and Process Quality.pdf</url></pdf-urls></urls><label>Austria;Belgium;Computer Associatess;Europe;Kepler University Linz;Middlesex University;Private Company;UK;University</label><abstract>This position paper presents arguments for including the properties of processes involved in various approaches to component-based software development in predicting sys- tem properties. It discusses how processes impact on sys- tem properties and relates the issues raised to standards that already address process and product quality. Although many standards still apply, CBD changes interpretations and emphases.</abstract></record></records></xml>
