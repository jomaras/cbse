<?xml version="1.0" encoding="UTF-8"?><xml><records><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Behrends, Reimer</author><author>Stirewalt, R E Kurt</author><author>Dillon, Laura K</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>A Component-Oriented Model for the Design of Safe Multi-threaded Applications</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>251-266</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Behrends, Stirewalt, Dillon - 2005 - A Component-Oriented Model for the Design of Safe Multi-threaded Applications.pdf</url></pdf-urls></urls><label>Dept. of Computer Science and Engineering Michigan;North America;Northeastern University;USA;University</label><abstract>We previously developed a component-oriented model that combines ideas from self-organizing architectures and from design by contract to address the complexity of design in multi-threaded systems. Components in our model are cohesive collections of objects that publish contracts declaring the conditions un- der which they access other components. These contracts localize a component’s contextual synchronization dependencies in its interface.Moreover, the resulting systems permit strong guarantees of safety. This paper reports a case study to validate the efficacy of our model on a realistic design problem: the component-based design of a multi-threaded web server.We first developed a bare-bones web server based on the Apache architecture and then subjected this design to three extension tasks. The study corroborates that our model enables a fine-grain component-based design of multi-threaded appli- cations of realistic complexity, while guaranteeing freedom fromcertain synchro- nization errors</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Beznosov, Konstantin</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Experience Report : Design and Implementation of a Component-Based Protection Architecture for ASP . NET Web Services</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>337-352</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Beznosov - 2005 - Experience Report Design and Implementation of a Component-Based Protection Architecture for ASP . NET Web Services.pdf</url></pdf-urls></urls><label>Europe;Laboratory for Education and Research in Secure Sy;United Kingdom;University;University of British Columbia</label><abstract>This report reflects, from a software engineering perspective, on the experience of designing and implementing protection mechanisms for ASP.NET Web services. The limitations of Microsoft ASP.NET container se- curity mechanisms render them inadequate for hosting enterprise-scale applica- tions that have to be protected according to diverse and/or complex application- specific security policies. In this paper we report on our experience of design- ing and implementing a component-based architecture for protecting enterprise- grade Web service applications hosted by ASP.NET. Due to its flexibility and extensibility, this architecture enables the integration of ASP.NET into the or- ganizational security infrastructure with less effort by Web service developers. The architecture has been implemented in a real-world security solution. This paper also contributes a best practice on constructing flexible and extensible au- thentication and authorization logic for Web services by using Resource Access Decision and Attribute Function (AF) architectural styles. Furthermore, the les- sons learned from our design and implementation experiences are discussed throughout the paper.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Bond, Gregory W</author><author>Cheung, Eric</author><author>Goguen, Healfdene H</author><author>Hanson, Karrie J</author><author>Henderson, Don</author><author>Karam, Gerald M</author><author>Purdy, K Hal</author><author>Smith, Thomas M</author><author>Zave, Pamela</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Experience with Component-Based Development of a Telecommunication Service</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>298-305</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Bond et al. - 2005 - Experience with Component-Based Development of a Telecommunication Service(2).pdf</url></pdf-urls></urls><label>AT&amp;T Laboratories—Research;Florham Park;Insitute;North America;USA</label><abstract>AT&amp;T CallVantageSM service is a consumer broadband voice-over-Internet-protocol (VoIP) service. Its feature server has a component-based architecture. This paper is a brief report on our expe- rience with building and deploying advanced telecommunication features using component-based technology.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Collet, Philippe</author><author>Rousseau, Roger</author><author>Coupaye, Thierry</author><author>Rivierre, Nicolas</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>A contracting Systems for Hierarchical Components</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>187-202</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Collet et al. - 2005 - A contracting Systems for Hierarchical Components(11).pdf</url></pdf-urls></urls><label>Europe;France;France Telecom R&amp;D Division;I3S Laboratory;Private Company;University;University of Nice - Sophia Antipolis</label><abstract>This article presents the contracting system ConFract for the open and hierarchical component model Fractal. Contracts are dynami- cally built from specifications, currently executable assertions, at assem- bly times, and are updated according to dynamic reconfigurations. These contracts are not restricted to the scope of interfaces, taken separately. On the contrary, new kinds of composition contracts can be built in or- der to associate several external interfaces of a component, providing an “usage contract”, or several interfaces inside the component, providing an “assembly and implementation contract”. All these contracts identify fine-grained responsibilities and developers can thus easily organize the handling of contract violations and the resulting reconfiguration</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Cooper, Kendra</author><author>Cangussu, João W</author><author>Lin, Rong</author><author>Sankaranarayanan, Ganesan</author><author>Soundararadjane, Ragouramane</author><author>Wong, Eric</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>An Empirical Study on the Specification and Selection of Components Using Fuzzy Logic</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>155-170</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Cooper et al. - 2005 - An Empirical Study on the Specification and Selection of Components Using Fuzzy Logic(5).pdf</url></pdf-urls></urls><label>North America;The University of Texas at Dallas;USA;University</label><abstract>The rigorous specification of components is necessary to support their selection, adaptation, and integration in component-based software engi- neering techniques. The specification needs to include the functional and non- functional attributes. The non-functional part of the specification is particularly challenging, as these attributes are often described subjectively, such as Fast Performance or Low Memory. Here, we propose the use of infinite value logic, fuzzy logic, to formally specify components. A significant advantage of fuzzy logic is that it supports linguistic variables, or hedges (e.g., terms such as slow, fast, very fast, etc.), which are convenient for describing non-functional attrib- utes. In this paper, a new systematic approach for the specification of compo- nents using fuzzy logic is presented. First, an empirical study is conducted to gather data on five components that provide data compression capabilities; each uses a different algorithm (Arithmetic Encoding, Huffman, Wavelet, Fractal, and Burrows-Wheeler Transform). Data on the response time performance, memory use, compression ratio, and root mean square error are collected by executing the components on a collection of 75 images with different file for- mats and sizes. The data are fuzzified and represented as membership func- tions. The fuzzy component specifications are ranked using a set of test queries. Fuzzy multi-criteria decision making algorithms are going to be investigated for the selection of components in the next phase of the work.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Crnkovic, Ivica</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Introduction</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>127-133</pages><volume>2</volume><issue>4</issue><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><electronic-resource-num>10.1002/swf.45</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Crnkovic - 2005 - Component-based software engineering new challenges in software development.pdf</url></pdf-urls></urls></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Diaz, Manuel</author><author>Garrido, Daniel</author><author>Romero, Sergio</author><author>Soler, Enrique</author><author>Rubio, Bartolome</author><author>Troya, Jose M.</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>A CCA-compliant Nuclear Power Plant Simulator Kernel</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>283-297</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Manuel et al. - 2005 - A CCA-compliant Nuclear Power Plant Simulator Kernel.pdf</url></pdf-urls></urls><label>Dpto. Lenguajes y Ciencias de la Computacion;Europe;Malaga University;Spain;University</label><abstract>This paper presents a parallel, component-oriented nuclear power plant simulator kernel. It is based on the high-performance com- puting oriented Common Component Architecture. The approach takes advantage of both the component paradigm and the parallel execution of simulation models. This way, the maintenance, evolution and efficiency of a simulator are improved. The work introduces the main features of the simulator kernel, describing concepts and the model it is based on. Data dependencies among components (simulation models conforming a simulator) are solved in a configuration phase, reducing the execution time of the simulation phase. Some preliminary results are shown, which anticipate the feasibility, suitability and efficiency of the proposal</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Dolstra, Eelco</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Efficient Upgrading in a Purely Functional Component Deployment Model</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>219-234</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Dolstra - 2005 - Efficient Upgrading in a Purely Functional Component Deployment Model.pdf</url></pdf-urls></urls><label>Europe;The Netherlands;University;Utrecht University</label><abstract>Safe and efficient deployment of software components is an important aspect of CBSE. The Nix deployment system enables side-by- side deployment of different versions and variants of components, com- plete installation, safe upgrades, and safe uninstalls through garbage collection. It accomplishes this through a purely functional deployment model, meaning that the file systemcontent of a component only depends on the inputs used to build it, and never changes afterwards. An appar- ent downside to this model is that upgrading “fundamental” components used as build inputs bymany other components becomes expensive, since all of these must be rebuilt and redeployed. In this paper we show that binary patching between sets of components enables efficient deployment of upgrades in the purely functional model, transparently to users. Se- quences of patches can be combined automatically to enable upgrading between arbitrary versions. The approach was empirically validated.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Franz, Elke</author><author>Wappler, Ute</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Tailored Responsibility Within Component-Based Systems</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>203-218</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Franz, Wappler - 2005 - Tailored Responsibility Within Component-Based Systems.pdf</url></pdf-urls></urls><label>Department of Computer Science;Dresden;Dresden University of Technology;Europe;Germany;University</label><abstract>The concept of responsibility aims at making a computing system trustworthy for its users despite the fact that failures of IT sys- tems cannot be completely excluded. The presented concept comprises the following issues: In case of failures, the responsible stakeholder can be identified and it is ensured that this stakeholder is willing to compensate arisen loss. This enables users to claim damages. Until now, responsi- bility in this sense is not considered in practical systems. We especially investigate possibilities for integration of responsibility into component- based systems whereas the interests of all involved stakeholders should be considered. The newly introduced concept of tailored responsibility enables users to pose flexible demands for responsibility</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Fredriksson, Johan</author><author>Sandstrom, Kristian</author><author>Akerholm, Mikael</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Optimizing Resource Usage in Component-Based Real-Time Systems</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>49-65</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Fredriksson, Sandstrom, Akerholm - 2005 - Optimizing Resource Usage in Component-Based Real-Time Systems.pdf</url></pdf-urls></urls><label>Department of Computer Science and Engineering;Europe;Malardalen Real-Time Research Centre;Malardalen University;Sweden;University;Vasteras</label><abstract>The embedded systems domain represents a class of systems that have high requirements on cost efficiency as well as run-time prop- erties such as timeliness and dependability. The research on component- based systems has produced component technologies for guaranteeing real-time properties. However, the issue of saving resources by allocating several components to real-time tasks has gained little focus. Trade-offs when allocating components to tasks are, e.g., CPU-overhead, footprint and integrity. In this paper we present a general approach for allocating components to real-time tasks, while utilizing existing real-time analy- sis to ensure a feasible allocation. We demonstrate that CPU-overhead and memory consumption can be reduced by as much as 48% and 32% respectively for industrially representative systems</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Grunske, Lars</author><author>Kaiser, Bernhard</author><author>Papadopoulos, Yiannis</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Model-Driven Safety Evaluation with State-Event-Based Component Failure Annotations</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>33-48</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Grunske, Kaiser, Papadopoulos - 2005 - Model-Driven Safety Evaluation with State-Event-Based Component Failure Annotations(2).pdf</url></pdf-urls></urls><label>Australia;Department of Computer Science;Europe;Fraunhofer IESE;Germany;School of Information Technology and Electrical En;United Kingdom;University;University of Hull;University of Queensland</label><abstract>Over the past years, the paradigm of component-based software en- gineering has been established in the construction of complex mission-critical systems. Due to this trend, there is a practical need for techniques that evaluate critical properties (such as safety, reliability, availability or performance) of these systems. In this paper, we review several high-level techniques for the evaluation of safety properties for component-based systems and we propose a new evaluation model (State Event Fault Trees) that extends safety analysis towards a lower abstraction level. This model possesses a state-event semantics and strong encapsulation, which is especially useful for the evaluation of com- ponent-based software systems. Finally, we compare the techniques and give suggestions for their combined usage.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Gu, Zonghua</author><author>He, Zhimin</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Real-Time Scheduling Techniques for Implementation Synthesis from Component-Based Software Models</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>235-250</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Gu, He - 2005 - Real-Time Scheduling Techniques for Implementation Synthesis from Component-Based Software Models(2).pdf</url></pdf-urls></urls><label>Dept. of Computer Science University of Virginia;North America;USA;University</label><abstract>We consider a class of component-based software models with interaction style of buffered asynchronous message passing between components with ports, represented by UML-RT. After building a logical software model, it is necessary to synthesize a multi-threaded implemen- tation that runs on a given target hardware platform and satisfies timing constraints. Commercial code generators generate functional code, but ignore concurrency and timing issues. In this paper, we compare alter- native multi-threading strategies for implementation synthesis from this class of software models, and describe real-time scheduling analysis tech- niques that are useful during design space exploration for implementa- tion synthesis. We use the elevator control application to illustrate our analysis techniques.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Lagaisse, Bert</author><author>Joosen, Wouter</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Component-Based Open Middleware Supporting Aspect-Oriented Software Composition</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>139-154</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Lagaisse, Joosen - 2005 - Component-Based Open Middleware Supporting Aspect-Oriented Software Composition.pdf</url></pdf-urls></urls><label>Belgium;Dept. of Computer Science;Europe;K.U.Leuven;University</label><abstract>State-of-the-art middleware for component-based distributed applications requires openness to support a broad and varying range of services. It also requires powerful and maintainable composition between application logic and middleware services. In this paper we describe Dy- MAC (Dynamic Middleware with Aspect-Components), a component and aspect-based middleware framework that supports component-based development of middleware services and offers the power of aspect-ori- ented composition to connect the application logic to the middleware services. We discuss the issue of a lack of expressive power in the con- tracts of components and aspects when combining component-based and state-of-the-art aspect-oriented development. We describe how the Dy- MAC framework offers a component model that solves this problem with aspect integration contracts.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Lan, Ling</author><author>Huang, Gang</author><author>Ma, Liya</author><author>Wang, Meng</author><author>Mei, Hong</author><author>Zhang, Long</author><author>Chen, Ying</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Architecture Based Deployment of Large-Scale Component Based Systems : The Tool and Principles</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>123-138</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Lan et al. - 2005 - Architecture Based Deployment of Large-Scale Component Based Systems The Tool and Principles.pdf</url></pdf-urls></urls><label>Asia;China;IBM China Research Lab;Insitute;Peking University;Private Company;School of Electronics Engineering and Computer Sci;University</label><abstract>After a component based system is developed, it has to be deployed into a target environment. As the system becomes much larger and more complex and the environment becomes open and dynamic, the deployment comes to be a difficult, tiring, error-prone and time-consuming task. This paper proposes an architecture based approach to deploying large-scale component based systems into open and dynamic environments in a systematic and semi-automatic manner. It does four contributions to facilitate the deployment: Firstly, a supporting tool is developed to visualize the software architecture of the system to be deployed to help deployers understand the structure, functions and desired qualities of the system. Secondly, the tool can automatically generate the deployment information from the architecture description produced in the phase of design and this will relieve deployers of inputting hundreds or thousands of deployment elements manually. Thirdly, the tool can monitor the up-to-date resource consumptions of the machines and support to partition one system into several subsystems and deploy the subsystems onto multiple machines simultaneously. Fourthly, a set of principles are proposed for guiding the deployment with the tool. The approach, especially the tool and principles are demonstrated on J2EE (Java 2 Platform Enterprise Edition</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Lau, Kung-kiu</author><author>Elizondo, Perla Velasco</author><author>Wang, Zheng</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Exogenous Connectors for Software Components</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>90-106</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Lau, Elizondo, Wang - 2005 - Exogenous Connectors for Software Components.pdf</url></pdf-urls></urls><label>Europe;School of Computer Science;The University of Manchester Manchester M13 9PL;United Kingdom;University</label><abstract>In existing component models, control originates in components, and connectors are channels for passing on the control to other components. This provides a mechanism for message passing, which allows components to invoke one another’s operations by method calls (or remote procedure calls) either di- rectly or indirectly via a channel such as a bus. Thus components in these models mix computation with control, since in performing their computation they also initiate method calls and manage their returns, via connectors. Consequently, in terms of control, components are not loosely coupled. In this paper, we propose exogenous connectors, and demonstrate their use in a small example. In con- trast to connectors in existing component models, exogenous connectors initiate calls and manage their returns, and are used to encapsulate control in a compo- nent model we are working on. In the example, we demonstrate the feasibility of exogenous connectors, and compare them with connectors in closely related architecture description languages.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Liu, Yan</author><author>Gorton, Ian</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Performance Prediction of J2EE Applications Using Messaging Protocols</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>1-16</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Liu, Gorton - 2005 - Performance Prediction of J2EE Applications Using Messaging Protocols.pdf</url></pdf-urls></urls><label>Australia;Insitute;National ICT Australia (NICTA)</label><abstract>Predicting the performance of component-based applications is diffi- cult due to the complexity of the underlying component technology. This prob- lem is exacerbated when a messaging protocol is introduced to create a loosely coupled software architecture. Messaging uses asynchronous communication, and must address quality of service issues such as message persistence and flow control. In this paper, we present an approach to predicting the performance of Java 2 Enterprise Edition (J2EE) applications using messaging services. The prediction is done during application design, without access to the application implementation. This is achieved by modeling the interactions among J2EE and messaging components using queuing network models, calibrating the perform- ance model with architecture attributes associated with these components, and populating the model parameters using a lightweight, application-independent benchmark. Benchmarking avoids the need for prototype testing in order to ob- tain the value of model parameters, and thus reduces the performance predic- tion effort. A case study is carried out to predict the performance of a J2EE ap- plication with asynchronous communication. Analysis of the resulting predic- tions shows the error is within 15%.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Mattmann, Chris A.</author><author>Medvidovic, Nenad</author><author>Ramirez, Paul M.</author><author>Jakobac, Vladimir</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Unlocking the grid</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>42</pages><volume>1</volume><issue>3</issue><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><electronic-resource-num>10.1049/et:20060304</electronic-resource-num><urls><pdf-urls><url>internal-pdf://Mattmann et al. - 2005 - Unlocking the grid(2).pdf</url></pdf-urls></urls><label>Insitute;Jet Propulsion Laboratory;North America;USA;University;University of Southern California</label><abstract>The grid has emerged as a novel paradigm that supports seamless cooperation of distributed, heterogeneous computing resources in addressing highly complex computing and data management tasks. A number of soft- ware technologies have emerged to enable &quot;grid computing&quot;. However, their exact nature, underlying principles, requirements, and architecture are still not fully understood and remain under-specified. In this paper, we present the results of a study whose goal was to try to identify the key underlying re- quirements and shared architectural traits of grid technologies. We then used these requirements and architecture in assessing five existing, representative grid technologies. Our studies show a fair amount of deviation by the indi- vidual technologies from the widely cited baseline grid architecture. Our studies also suggest a core set of critical requirements that must be satisfied by grid technologies, and highlight a key distinction between &quot;computation- al&quot; and &quot;data&quot; grids in terms of the identified requirements.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Meyerhofer, Marcus</author><author>Volz, Bernhard</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>EJBMemProf – A Memory Profiling Framework for Enterprise JavaBeans</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>17-32</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Meyerhofer, Volz - 2005 - EJBMemProf – A Memory Profiling Framework for Enterprise JavaBeans.pdf</url></pdf-urls></urls><label>Europe;Friedrich-Alexander University of Erlangen and Nur;Germany;University</label><abstract>Deriving resource properties of components such as memory con- sumption is a requirement for the specification of non-functional properties of software components, enabling developers to make a selection among compo- nents not solely based on their function. In this paper we present a profiler for Enterprise Java Beans components that has been specifically adapted to the char- acteristics of such components. It facilitates focussing on the component concept whithout getting caught up in the details of the objects that actually constitute a component and offers several views concerning what to attribute to the memory consumption of a component. Our implementation is based on JVMPI and uses filtering inside the agent to generate the component profiles</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>P. Akolkar, Rahul</author><author>Faruqie, Tanveer</author><author>Huerta, Juan</author><author>Kankar, Pankaj</author><author>Rajput, Nitendra</author><author>Raman, T.V.</author><author>U. Udupa, Reghavendra</author><author>Verma, Abhishek</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Reusable Dialog Component Framework for Rapid Voice Application Development</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>306-321</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://P. Akolkar et al. - 2005 - Reusable Dialog Component Framework for Rapid Voice Application Development.pdf</url></pdf-urls></urls><label>Asia;IBM Almaden Research Center;IBM India Research Lab;IBM T J Watson Research Center;IIT Campus;India;Institute;North America;Private Company;USA;Yorktown Heights NY</label><abstract>Voice application development requires specialized speech re- lated skills besides the general programming ability. Encapsulating the speech specific behavior and complexities in prepackaged, configurable User Interface (UI) components will ease and expedite the voice applica- tion development. These components can be used across applications and are called as Reusable Dialog Components (RDCs). In this paper we pro- pose a programming model and the framework for developing reusable dialog components. Our framework facilitates the development of voice applications via the encapsulation of interaction mechanisms, the en- capsulation of best-of-breed practices (ie. grammars, prompts, and con- figuration parameters), a modular design and through pluggable dialog management strategies. The framework extends the standard J2EE/JSP based programming model to make it suitable for voice applications</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Pelliccione, Patrizio</author><author>Muccini, Henry</author><author>Bucchiarone, Antonio</author><author>Facchini, Fabrizio</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>TeStor : Deriving Test Sequences from Model-Based Specifications</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>267-282</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Pelliccione et al. - 2005 - TeStor Deriving Test Sequences from Model-Based Specifications.pdf</url></pdf-urls></urls><label>Computer Science Department;Europe;Istituto di Scienza e Tecnologie dell’Informazione;Italy;University;University of L’Aquila</label><abstract>The dependability analysis of a component-based system may be driven by the components/system implementation or by the model-based specification provided prior to or together with the im- plementation. In particular, model-based specifications of a component- based system allows to explicitly model the structure and behavior of components and their integration, while model-based testing allows to derive test sequences which can be successively refined into test cases and then run onto the system implementation. Several techniques have been proposed so far to allow model-based test- ing. However, very few of them show certain characteristics which are peculiar for use in industrial contexts.We here describe TeStor,a TEst Sequence generaTOR algorithm which allows to extract test sequences from both state machine and scenario diagrams.We detail the algorithm, we apply it to a system study and we provide a link to its implementa- tion.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Rountev, Atanas</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Component-Level Dataflow Analysis</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>82-89</pages><keywords><keyword>North America</keyword><keyword>Ohio State University</keyword><keyword>Univesity</keyword><keyword>USA</keyword></keywords><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Rountev - 2005 - Component-Level Dataflow Analysis.pdf</url></pdf-urls></urls><abstract>Interprocedural dataflow analysis has a wide range of uses in software maintenance, testing, verification, and optimization. Despite the large body of research on various analyses, the widespread adoption of these techniques faces serious challenges. In particular, when software is built with reusable components, the standard approaches for dataflow analysis cannot be applied. This paper proposes a model of component- level analysis which generalizes the traditional model of whole-program analysis.We outline the theoretical foundations of component-level anal- ysis, discuss some of the key technical challenges for such analysis, and present initial results from our work on addressing these challenges.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Sharma, Vibhu Saujanya</author><author>Jalote, Pankaj</author><author>Trivedi, Kishor S</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Evaluating Performance Attributes of Layered Software Architecture</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>66-81</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Sharma, Jalote, Trivedi - 2005 - Evaluating Performance Attributes of Layered Software Architecture.pdf</url></pdf-urls></urls><label>Asia;Department of Computer Science and Engineering;Department of Electrical and Computer Engineering;Duke University;India;Indian Institute of Technology Kanpur;Insitute;North America;USA;University</label><abstract>The architecture of a software system is the highest level of abstrac- tion whereupon useful analysis of system properties is possible. Hence, per- formance analysis at this level can be useful for assessing whether a proposed architecture can meet the desired performance specifications and can help in making key architectural decisions. In this paper we propose an approach for performance evaluation of software systems following the layered architecture, which is a common architectural style for building software systems. Our ap- proach initially models the system as a Discrete Time Markov Chain, and ex- tracts parameters for constructing a closed Product Form Queueing Network model that is solved using the SHARPE software package. Our approach pre- dicts the throughput and the average response time of the system under varying workloads and also identifies bottlenecks in the system, suggesting possibilities for their removal.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Tansalarak, Naiyana</author><author>Claypool, Kajal</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Finding a Needle in the Haystack: A Technique for Ranking Matches Between Components</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>171-186</pages><issue>i</issue><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Tansalarak, Claypool - 2005 - Finding a Needle in the Haystack A Technique for RankingMatches Between Components.pdf</url></pdf-urls></urls><label>Department of Computer Science;North America;USA;University;University of Massachusetts - Lowell</label><abstract>Searching and subsequently selecting reusable components fromcom- ponent repositories has become a key impediment for not only component-based development but also for achieving the overall usability of component develop- ment environments and the ultimate re-usability of the components themselves. Component matching, a fundamental aspect of the component search problem, has been awell-studied problem, resulting inmany different matching techniques such as keyword, facet, signature and specification matching techniques. How- ever, each matching technique individually applied for component search often yields a small or large number of (sometimes irrelevant) hits. In this paper, we propose a disciplined combination of the different matching techniques to pro- vide a ranked set of highly qualified components from component repositories. Our work is based on a unique Quality of Match (QoM) metric that measures the overall “goodness” of the match between two given components. In partic- ular, we provide qualitative and quantitative analysis to evaluate the QoM of two given components based on component information. Moreover, we present QoMym, a QoM-based hybrid match algorithm, that combines the strengths of different matching techniques and provides higher accuracy than existing match- ing techniques.</abstract></record><record><database name="2005.enl" path="2005.enl">2005.enl</database><ref-type name="Conference Proceedings">10</ref-type><contributors><authors><author>Tournier, Jean-charles</author><author>Babau, Jean-philippe</author><author>Olive, Vincent</author></authors><secondary-authors><author>George T. Heineman, Ivica Crnkovic, Heinz W. Schmidt, Judith A. Stafford, Clemens Szyperski and Kurt Wallnau</author></secondary-authors></contributors><titles><title>Qinna , a Component-Based QoS Architecture</title><secondary-title>Component-Based Software Engineering 8th International Symposium, CBSE</secondary-title></titles><periodical><full-title>Component-Based Software Engineering 8th International Symposium, CBSE</full-title></periodical><pages>107-122</pages><keywords/><dates><year>2005</year></dates><pub-location>St. Louis, MO, USA</pub-location><urls><pdf-urls><url>internal-pdf://Tournier, Babau, Olive - 2005 - Qinna , a Component-Based QoS Architecture.pdf</url></pdf-urls></urls><label>CITI/INSA Lyon;Europe;France;France Telecom R&amp;D Division;Insitute;Private Company</label><abstract>Component-Based Software Engineering is quickly becom- ing a mainstream approach to software development. At the same time, there is a massive shift from desktop applications to embedded commu- nicating systems (e.g. PDAs or smartphones): it is especially the case for multimedia applications such as video players, music players, etc. More- over, embedded communicating systems have to deal with open aspect: applications may come or leave the system on the fly. A key point of these systems is its ability to rigorously manage Quality of Service due to resource constraints. In this paper, we present a component-based QoS architecture well-suited for open systems, called Qinna. Qinna is defined using Fractal compo- nents and takes into consideration the main QoS concepts (specification, provision and management). An analysis and an experiment illustrate answers brought by Qinna to open system issues</abstract></record></records></xml>
